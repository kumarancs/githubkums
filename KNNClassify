# -*- coding: utf-8 -*-
"""
Created on Thu Feb 20 16:15:28 2020

@author: 146846
"""


import pandas as pd
import numpy as np

test_cars=pd.read_csv('CrashTest_TestData.csv')
train_cars=pd.read_csv('CrashTest_TrainData.csv')

pd.set_option('display.max_columns',500)
print(test_cars.describe())
print(train_cars.describe())

cartype = pd.crosstab(index=test_cars["CarType"],columns='count',normalize=True)
print(cartype)

final_test=test_cars.dropna(axis=0)
final_train=train_cars.dropna(axis=0)

print(final_test.info())
print(final_train.info())

new_test=pd.get_dummies(final_test, drop_first=True)
new_train=pd.get_dummies(final_train, drop_first=True)

columns_test = list(new_test.columns)
columns_train = list(new_train.columns)

# Separate the dependent variables from independant variables
testfeatures = list(set(columns_test)-set(['CarType_SUV']))
trainfeatures = list(set(columns_train)-set(['CarType_SUV']))

test_y=new_test['CarType_SUV'].values
train_y=new_train['CarType_SUV'].values

# Other variables in x axis
test_x=new_test[testfeatures].values
train_x=new_test[trainfeatures].values

from sklearn.neighbors import KNeighborsClassifier

# import performance metrics
from sklearn.metrics import accuracy_score, confusion_matrix

# Store the nearest neighbours classifier
KNN_Classifier=KNeighborsClassifier(n_neighbors=2)

KNN_Classifier.fit(test_x,test_y)

prediction=KNN_Classifier.predict(test_x)
accuracy_score=accuracy_score(test_y,prediction)
print(accuracy_score)

#KNN_ClassifierT=KNeighborsClassifier(n_neighbors=3)
#KNN_ClassifierT.fit(train_x,train_y)

#prediction=KNN_ClassifierT.predict(train_x)
#accuracy_score=accuracy_score(train_y,prediction)
#print(accuracy_score)
